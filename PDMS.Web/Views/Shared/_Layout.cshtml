@using PDMS.Web.Models.Sidebar
@{
    Layout = "_Base";
    var sections = ViewData[SidebarExtension.Key] as List<SidebarSection>;
    var definedSection = IsSectionDefined("SideBar");

    void RenderSidebarItemTitle(SidebarItem sidebarItem) {
        <div class="d-flex align-items-center">
            @if (sidebarItem.Icon != null) {
                <span class="nav-link-icon">
                    <i class="iconify-inline" data-icon="@sidebarItem.Icon"></i>
                </span>
            }
            <span class="nav-link-text ps-1">@sidebarItem?.Name</span>
        </div>
    }

    void RenderSidebarContent(SidebarItem sidebarItem) {
        if (sidebarItem.Count == 0) {
            <a class="nav-link" href="@sidebarItem.Href" role="button" aria-expanded="false">
                @{ RenderSidebarItemTitle(sidebarItem); }
            </a>
        } else {
            var uid = "z" + Guid.NewGuid().ToString("N");
            <a class="nav-link dropdown-indicator" href="#@uid" role="button" data-bs-toggle="collapse" aria-expanded="false">
                @{ RenderSidebarItemTitle(sidebarItem!); }
            </a>
            <ul class="nav collapse" id="@uid">
                @foreach (var item in sidebarItem) {
                    RenderSidebarItem(item);
                }
            </ul>
        }
    }

    void RenderSidebarItem(SidebarItem sidebarItem, bool isRootItem = false) {
        if (isRootItem) {
            RenderSidebarContent(sidebarItem);
        } else {
            <li class="nav-item">
                @{ RenderSidebarContent(sidebarItem); }
            </li>
        }
    }
}

@section HeadBeforeStyle {
    @await RenderSectionAsync("HeadBeforeStyle", false)
}

@section Heads {
    @await RenderSectionAsync("Heads", false)
}

@section ScriptBefore {
    @await RenderSectionAsync("ScriptBefore", false)
}

@section Scripts {
    @await RenderSectionAsync("Scripts", false)
}

<main class="@(ViewData["Protected"] as bool? == true ? "main d-none" : "main")" id="top">
    <div id="toast-container" class="toast-container top-0 end-0 position-absolute p-3" style="z-index: 9999"></div>
    <div class="container">
        @if (definedSection || sections != null) {
            <nav class="navbar navbar-light navbar-vertical navbar-expand-xl">
                <div class="d-flex align-items-center">
                    <div class="toggle-icon-wrapper">
                        <button class="btn navbar-toggler-humburger-icon navbar-vertical-toggle" data-bs-toggle="tooltip" data-bs-placement="left" aria-label="Toggle Navigation">
                            <span class="navbar-toggle-icon">
                                <span class="toggle-line"></span>
                            </span>
                        </button>
                    </div>
                    <a class="navbar-brand" href="/">
                        <div class="d-flex align-items-center py-3">
                            <img width="40" class="me-2" src="/images/prn231.png" alt="PDMS">
                            <span class="font-sans-serif">PDMS</span>
                        </div>
                    </a>
                </div>
                <div class="collapse navbar-collapse" id="headerVerticalCollapse">
                    <div class="navbar-vertical-content scrollbar">
                        <ul class="navbar-nav flex-column mb-3" id="navbarVerticalNav">
                            @if (definedSection) {
                                @await RenderSectionAsync("SideBar", false)
                            }
                            @if (!definedSection && sections != null) {
                                foreach (var section in sections) {
                                    <li class="nav-item">
                                        @if (section.Title != null) {
                                            <div class="row navbar-vertical-label-wrapper mt-3 mb-2">
                                                <div class="col-auto navbar-vertical-label">@(section.Title)</div>
                                                <div class="col ps-0">
                                                    <hr class="mb-0 navbar-vertical-divider">
                                                </div>
                                            </div>
                                        }
                                        @foreach (var item in section) {
                                            RenderSidebarItem(item);
                                        }
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </nav>
        }
        <div class="content">
            @await Html.PartialAsync("_Header")
            <nav id="breadcrumb" class="fw-medium my-3" aria-label="breadcrumb">
                <ol class="breadcrumb"></ol>
            </nav>
            @RenderBody()
        </div>
    </div>
</main>
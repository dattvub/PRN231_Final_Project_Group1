/*
* HSCore
* @version: 4.1.0 (12 July, 2021)
* @author: HtmlStream
* @event-namespace: .HSCore
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
*/
"use strict"; const HSCore = { components: {}, collection: { tooltips: [], popovers: [] }, init: function () { const t = this, e = document.querySelectorAll('[data-bs-toggle="tooltip"]'); for (let i = 0; i < e.length; i += 1)t.collection.tooltips.push(new bootstrap.Tooltip(e[i])); const i = document.querySelectorAll('[data-bs-toggle="popover"]'); for (let e = 0; e < i.length; e += 1)t.collection.popovers.push(new bootstrap.Popover(i[e])); document.querySelectorAll("[data-bs-popover-dark]").forEach((function (t) { t.addEventListener("click", (function (t) { const e = document.querySelectorAll(".popover"); e.length && e[e.length - 1].classList.add("popover-dark") })) })) }, getTooltips: function () { return this.collection.tooltips }, hideTooltips: function () { const t = this.getTooltips(); for (let e = 0; e < t.length; e += 1)t[e].hide() }, getPopovers: function () { return this.collection.popovers }, hidePopovers: function () { const t = this.getPopovers(); for (let e = 0; e < t.length; e += 1)t[e].hide() }, disposePopovers: function () { const t = this.getPopovers(); for (let e = 0; e < t.length; e += 1)t[e].dispose() } }; HSCore.init(); const HSBsDropdown = { init(t) { this.setAnimations(), this.openOnHover() }, scrollEvent: null, setAnimations() { window.addEventListener("show.bs.dropdown", (t => { const e = t.target.closest(".table-responsive"); e && (this.scrollEvent = function () { new bootstrap.Dropdown(t.target).hide() }, e.addEventListener("scroll", this.scrollEvent)); if (!t.target.hasAttribute("data-bs-dropdown-animation")) return; const i = t.target.nextElementSibling; i.style.opacity = 0, setTimeout((() => { i.style.transform = `${i.style.transform} translateY(10px)` })), setTimeout((() => { i.style.transform = `${i.style.transform} translateY(-10px)`, i.style.transition = "transform 300ms, opacity 300ms", i.style.opacity = 1 }), 100) })), window.addEventListener("hide.bs.dropdown", (t => { const e = t.target.closest(".table-responsive"); e && e.removeEventListener("scroll", this.scrollEvent); if (!t.target.hasAttribute("data-bs-dropdown-animation")) return; const i = t.target.nextElementSibling; setTimeout((() => { i.style.removeProperty("transform"), i.style.removeProperty("transition") })) })) }, openOnHover() { Array.from(document.querySelectorAll("[data-bs-open-on-hover]")).forEach((t => { var e; const i = new bootstrap.Dropdown(t); function o() { e = setTimeout((() => { i.hide() }), 500) } t.addEventListener("mouseenter", (() => { clearTimeout(e), i.show() })), i._menu.addEventListener("mouseenter", (() => { window.clearTimeout(e) })), Array.from([i._menu, t]).forEach((t => t.addEventListener("mouseleave", o))) })) } }, validators = { "data-hs-validation-equal-field": t => { const e = document.querySelector(t.getAttribute("data-hs-validation-equal-field")); t.addEventListener("input", (i => { e.value.toString().toLocaleLowerCase() !== i.target.value.toString().toLocaleLowerCase() ? t.setCustomValidity("qual-field") : t.setCustomValidity(""), HSBsValidation.updateFieldStete(t) })), e.addEventListener("input", (e => { t.value.toString().toLocaleLowerCase() !== e.target.value.toString().toLocaleLowerCase() ? t.setCustomValidity("qual-field") : t.setCustomValidity(""), HSBsValidation.updateFieldStete(t) })) } }, HSBsValidation = { init(t, e) { var i = document.querySelectorAll(t); return Array.prototype.slice.call(i).forEach((t => { for (const e in validators) Array.prototype.slice.call(t.querySelectorAll(`[${e}]`)).forEach(validators[e]); this.addVlidationListners(t.elements), t.addEventListener("submit", (i => { t.checkValidity() ? this.onSubmit({ event: i, form: t, options: e }) : (i.preventDefault(), i.stopPropagation(), this.checkFieldsState(t.elements)), t.classList.add("was-validated") }), !1) })), this }, addVlidationListners(t) { Array.prototype.slice.call(t).forEach((t => { const e = t.closest("[data-hs-validation-validate-class]"); e && (t.addEventListener("input", (t => this.updateFieldStete(t.target))), t.addEventListener("focus", (t => e.classList.add("focus"))), t.addEventListener("blur", (t => e.classList.remove("focus")))) })) }, checkFieldsState(t) { Array.prototype.slice.call(t).forEach((t => this.updateFieldStete(t))) }, updateFieldStete(t) { const e = t.closest("[data-hs-validation-validate-class]"); e && (t.checkValidity() ? (e.classList.add("is-valid"), e.classList.remove("is-invalid")) : (e.classList.add("is-invalid"), e.classList.remove("is-valid"))) }, onSubmit: t => !(!t.options || "function" != typeof t.options.onSubmit) && t.options.onSubmit(t) }
/*
* Chart.js wrapper
* @version: 3.0.0 (Mon, 27 Jun 2021)
* @requires: Chart.js v2.8.0
* @author: HtmlStream
* @event-namespace: .HSCore.components.HSCharJS
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
*/;
/*
* Leaflet wrapper
* @version: 2.0.0 (Sat, 22 May 2021)
* @requires: Leafletjs v1.6.0
* @author: HtmlStream
* @event-namespace: .HSCore.components.HSLeaflet
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
*/
function isObject(t) { return t && "object" == typeof t && !Array.isArray(t) } function mergeDeep(t, ...e) { if (!e.length) return t; const i = e.shift(); if (isObject(t) && isObject(i)) for (const e in i) isObject(i[e]) ? (t[e] || Object.assign(t, { [e]: {} }), mergeDeep(t[e], i[e])) : Object.assign(t, { [e]: i[e] }); return mergeDeep(t, ...e) } HSCore.components.HSChartMatrixJS = { dataAttributeName: "data-hs-chartjs-options", defaults: { type: "matrix", options: { animation: { duration: 0 }, responsive: !0, maintainAspectRatio: !1, plugins: { legend: !1, tooltip: { enabled: !1, mode: "nearest" } }, gradientPosition: { x0: 0, y0: 0, x1: 0, y1: 0 } } }, defaultThemeKey: "default", collection: [], themes: {}, init(t, e, i) { const o = this; let n; n = t instanceof HTMLElement ? [t] : t instanceof Object ? t : document.querySelectorAll(t); for (let t = 0; t < n.length; t += 1)o.addToCollection(n[t], e, i || n[t].id); if (!o.collection.length) return !1; window.addEventListener("on-hs-appearance-change", (t => this._updateTheme(t.detail))), o._init() }, addToCollection(t, e, i) { this.collection.push({ $el: t, id: i || null, options: e || {}, dataSettings: t.hasAttribute(this.dataAttributeName) ? JSON.parse(t.getAttribute(this.dataAttributeName)) : {} }) }, addTheme(t, e, i) { const o = t; this.themes.hasOwnProperty(o) ? this.themes[o][e] = i : this.themes[o] = { [e]: i } }, getTheme(t, e) { return this.themes[t] && this.themes[t][e] || console.error(`The element '${t}' or theme '${e}' was not found in the HSChartjs theme list.`), this.themes[t][e] }, getItems() { const t = this; let e = []; for (let i = 0; i < t.collection.length; i += 1)e.push(t.collection[i].$initializedEl); return e }, getItem(t) { return "number" == typeof t ? this.collection[t].$initializedEl : this.collection.find((e => e.id === t)).$initializedEl }, _init: function (t, e) { const i = this; for (let t = 0; t < i.collection.length; t += 1) { let e, o; i.collection[t].hasOwnProperty("$initializedEl") || (o = i.collection[t].$el, e = i.extendOptions(o, i.collection[t].options, i.collection[t].dataSettings, t), i.backgroundColor(e), i.legend(e), i.tooltip(), i.collection[t].$initializedEl = new Chart(o, e)) } }, backgroundColor(t) { t.options.hasOwnProperty("matrixBackgroundColord") && t.data.datasets.forEach((function (e) { e.backgroundColor = function (e) { var i = e.dataset.data[e.dataIndex].v, o = ((t.options.matrixBackgroundColord.hasOwnProperty("additionToValue") ? t.options.matrixBackgroundColord.additionToValue : 5) + i) / t.options.matrixBackgroundColord.accent; return 0 == i.toFixed() && t.options.matrixBackgroundColord.hasOwnProperty("nullColor") ? Chart.helpers.color(t.options.matrixBackgroundColord.nullColor).rgbString() : Chart.helpers.color(t.options.matrixBackgroundColord.color).alpha(o).rgbString() } })) }, legend(t) { if (t.options.hasOwnProperty("matrixLegend")) { for (var e = t.data.datasets[0].data[0].v, i = t.data.datasets[0].data[0].v, o = 1; o < t.data.datasets[0].data.length; o++)t.data.datasets[0].data[o].v < e && (e = t.data.datasets[0].data[o].v), t.data.datasets[0].data[o].v > i && (i = t.data.datasets[0].data[o].v); e = e.toFixed(), i = i.toFixed(); var n = [], l = t.options.matrixLegend.hasOwnProperty("stepSize") ? t.options.matrixLegend.stepSize : i / 10, s = t.options.matrixBackgroundColord.hasOwnProperty("additionToValue") ? t.options.matrixBackgroundColord.additionToValue : 5, a = document.querySelector(t.options.matrixLegend.container); a.classList.add("hs-chartjs-matrix-legend"), a.insertAdjacentHTML("beforeend", `<li class="hs-chartjs-matrix-legend-min">${e}</li>`); for (o = 0; o < i;) { var r = (s + o) / t.options.matrixBackgroundColord.accent; n.push('<li class="hs-chartjs-matrix-legend-item" style="background-color: ' + Chart.helpers.color(t.options.matrixBackgroundColord.color).alpha(r).rgbString() + '"></li>'), o += l } a.insertAdjacentHTML("beforeend", n.join("")), t.options.matrixLegend.metric && i > 100 && (i = i < 1e6 ? i / 1e3 + "k" : i / 1e6 + "kk"), a.insertAdjacentHTML("beforeend", `<li class="hs-chartjs-matrix-legend-max">${i}</li>`) } }, tooltip() { window.addEventListener("mousemove", (function (t) { if (!t.target.closest("canvas")) { let t = document.querySelector(".hs-chartjs-tooltip-matrix"); t && t.parentElement.removeChild(t) } })) }, extendOptions(t, e, i, o) { const n = (t, e, i = !1) => { t = (t => { let e; try { e = JSON.parse(JSON.stringify(t)) } catch (i) { e = Object.assign({}, t) } return e })(t); const o = t => t && "object" == typeof t; return o(t) && o(e) ? (Object.keys(e).forEach((l => { const s = t[l], a = e[l]; Array.isArray(s) && Array.isArray(a) ? i ? (t[l] = s.map(((t, e) => a.length <= e ? t : n(t, a[e], i))), a.length > s.length && (t[l] = t[l].concat(a.slice(s.length)))) : t[l] = s.concat(a) : o(s) && o(a) ? t[l] = n(Object.assign({}, s), a, i) : t[l] = a })), t) : e }; let l = n(this.defaults, n(i, e, !0), !0); return l.options = this._setTheme(l.options, t.id || o), l.options.plugins.tooltip.external = function (t) { var e = document.getElementById("chartjsTooltip"); if (e || ((e = document.createElement("div")).id = "chartjsTooltip", e.style.opacity = 0, e.classList.add("hs-chartjs-tooltip-wrap"), e.classList.add("hs-chartjs-tooltip-matrix"), e.innerHTML = '<div class="hs-chartjs-tooltip"></div>', document.body.appendChild(e)), "matrix" !== l.type && 0 === t.tooltip.opacity) return e.style.opacity = 0, void e.remove(); if (e.classList.remove("above", "below", "no-transform"), t.tooltip.yAlign ? e.classList.add(t.tooltip.yAlign) : e.classList.add("no-transform"), t.tooltip.body) { var i = t.tooltip.title || [], o = t.tooltip.body.map((function (t) { return t.lines })), n = new Date, s = '<header class="hs-chartjs-tooltip-header">'; i.forEach((function (t) { s += t + ", " + n.getFullYear() })), s += '</header><div class="hs-chartjs-tooltip-body">', o.forEach((function (e, i) { s += "<div>"; var o = e[0], n = o, a = t.tooltip.labelColors[i].backgroundColor instanceof Object ? t.tooltip.labelColors[i].borderColor : t.tooltip.labelColors[i].backgroundColor; s += (l.options.plugins.tooltip.hasIndicator ? '<span class="d-inline-block rounded-circle mr-1" style="width: ' + l.options.plugins.tooltip.indicatorWidth + "; height: " + l.options.plugins.tooltip.indicatorHeight + "; background-color: " + a + '"></span>' : "") + (o.length > 3 ? n : e), s += "</div>" })), s += "</div>", e.querySelector(".hs-chartjs-tooltip").innerHTML = s } var a = this._chart.canvas.getBoundingClientRect(); e.style.opacity = 1, e.style.left = a.left + window.pageXOffset + t.tooltip.caretX - e.offsetWidth / 2 - 3 + "px", e.style.top = a.top + window.pageYOffset + t.tooltip.caretY - e.offsetHeight - 25 + "px", e.style.pointerEvents = "none", e.style.transition = l.options.plugins.tooltip.transition }, l }, _setTheme(t, e) { const i = (t, e, o = !1) => { t = (t => { let e; try { e = JSON.parse(JSON.stringify(t)) } catch (i) { e = Object.assign({}, t) } return e })(t); const n = t => t && "object" == typeof t; return n(t) && n(e) ? (Object.keys(e).forEach((l => { const s = t[l], a = e[l]; Array.isArray(s) && Array.isArray(a) ? o ? (t[l] = s.map(((t, e) => a.length <= e ? t : i(t, a[e], o))), a.length > s.length && (t[l] = t[l].concat(a.slice(s.length)))) : t[l] = s.concat(a) : n(s) && n(a) ? t[l] = i(Object.assign({}, s), a, o) : t[l] = a })), t) : e }; let o = localStorage.getItem("hs_theme") || window.hs_config.themeAppearance.layoutSkin; return "auto" === o && (o = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "default"), this.themes[e] && o !== this.defaultThemeKey ? i(t, this.themes[e][o].options, !0) : t }, _updateTheme(t) { Object.keys(this.themes).forEach((t => { let e = this.collection.findIndex((e => e.id === t)); e = e < 0 ? t : e; const i = this.collection[e]; if (i) { let e = this.extendOptions(i.$el, i.options, i.dataSettings, t); i.$initializedEl.data = e.data, i.$initializedEl.options = e.options, i.$initializedEl.update() } })) } }
/*
* Chart.js wrapper
* @version: 3.0.0 (Mon, 25 Nov 2021)
* @requires: Chart.js v2.8.0
* @author: HtmlStream
* @event-namespace: .HSCore.components.HSCharJS
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
/*
* Dropzone wrapper
* @version: 3.0.1 (Wed, 28 Jul 2021)
* @requires: dropzone v5.5.0
* @author: HtmlStream
* @event-namespace: .HSCore.components.HSDropzone
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
*/, HSCore.components.HSDropzone = { collection: [], dataAttributeName: "data-hs-dropzone-options", defaults: { url: "https://httpbin.org/anything", thumbnailWidth: 300, thumbnailHeight: 300, previewTemplate: '<div class="col h-100 mb-4">    <div class="dz-preview dz-file-preview">      <div class="d-flex justify-content-end dz-close-icon">        <small class="bi-x" data-dz-remove></small>      </div>      <div class="dz-details d-flex">        <div class="dz-img flex-shrink-0">         <img class="img-fluid dz-img-inner" data-dz-thumbnail>        </div>        <div class="dz-file-wrapper flex-grow-1">         <h6 class="dz-filename">          <span class="dz-title" data-dz-name></span>         </h6>         <div class="dz-size" data-dz-size></div>        </div>      </div>      <div class="dz-progress progress">        <div class="dz-upload progress-bar bg-success" role="progressbar" style="width: 0" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" data-dz-uploadprogress></div>      </div>      <div class="d-flex align-items-center">        <div class="dz-success-mark">          <span class="bi-check-lg"></span>        </div>        <div class="dz-error-mark">          <span class="bi-x-lg"></span>        </div>        <div class="dz-error-message">          <small data-dz-errormessage></small>        </div>      </div>    </div></div>' }, init(t, e, i) { const o = this; let n; n = t instanceof HTMLElement ? [t] : t instanceof Object ? t : document.querySelectorAll(t); for (let t = 0; t < n.length; t += 1)o.addToCollection(n[t], e, i || n[t].id); if (!o.collection.length) return !1; o._init() }, addToCollection(t, e, i) { const o = this; this.collection.push({ $el: t, id: i || null, options: Object.assign({}, o.defaults, t.hasAttribute(o.dataAttributeName) ? JSON.parse(t.getAttribute(o.dataAttributeName)) : {}, e) }) }, getItems() { const t = this; let e = []; for (let i = 0; i < t.collection.length; i += 1)e.push(t.collection[i].$initializedEl); return e }, getItem(t) { return "number" == typeof t ? this.collection[t].$initializedEl : this.collection.find((e => e.id === t)).$initializedEl }, _init() { const t = this; for (let e = 0; e < t.collection.length; e += 1) { let i, o; t.collection[e].hasOwnProperty("$initializedEl") || (i = t.collection[e].options, o = t.collection[e].$el, t.collection[e].$initializedEl = new Dropzone(o, i)) } } }
/*
* Quill wrapper
* @version: 2.0.0 (Wed, 28 Jul 2021)
* @requires: quill v1.3.7
* @author: HtmlStream
* @event-namespace: .HSCore.components.HSQuill
* @license: Htmlstream Libraries (https://htmlstream.com/licenses)
* Copyright 2021 Htmlstream
*/, HSCore.components.HSQuill = { collection: [], dataAttributeName: "data-hs-quill-options", defaults: { theme: "snow", attach: !1 }, init(t, e, i) { const o = this; let n; n = t instanceof HTMLElement ? [t] : t instanceof Object ? t : document.querySelectorAll(t); for (let t = 0; t < n.length; t += 1)o.addToCollection(n[t], e, i || n[t].id); if (!o.collection.length) return !1; o._init() }, addToCollection(t, e, i) { const o = this; this.collection.push({ $el: t, id: i || null, options: Object.assign({}, o.defaults, t.hasAttribute(o.dataAttributeName) ? JSON.parse(t.getAttribute(o.dataAttributeName)) : {}, e) }) }, getItems() { const t = this; let e = []; for (let i = 0; i < t.collection.length; i += 1)e.push(t.collection[i].$initializedEl); return e }, getItem(t) { return "number" == typeof t ? this.collection[t].$initializedEl : this.collection.find((e => e.id === t)).$initializedEl }, _init() { const t = this; for (let e = 0; e < t.collection.length; e += 1) { let i, o; t.collection[e].hasOwnProperty("$initializedEl") || (i = t.collection[e].options, o = t.collection[e].$el, t.collection[e].$initializedEl = new Quill(o, i), o.classList.add("hs-quill-initialized"), this.toolbarBottom(i, t.collection[e].$initializedEl)) } }, toolbarBottom: function (t, e) { if (t.toolbarBottom) { const i = e.container, o = i.previousElementSibling; if (i.parentElement.classList.add("ql-toolbar-bottom"), t.attach) { document.querySelector(t.attach).addEventListener("shown.bs.modal", (() => { i.style.paddingBottom = o.offsetHeight + "px" })) } else i.style.paddingBottom = o.offsetHeight + "px"; o.style.position = "absolute", o.style.width = "100%", o.style.bottom = 0 } } }
/*
    * HSTomSelect Plugin
    * @version: 1.0.0 (Mon, 24 May 2021)
    * @requires: tom-select 1.7.26
    * @author: HtmlStream
    * @event-namespace: .HSTomSelect
    * @license: Htmlstream Libraries (https://htmlstream.com/)
    * Copyright 2021 Htmlstream
    */
    HSCore.components.HSTomSelect = { dataAttributeName: "data-hs-tom-select-options", defaults: { dropdownWrapperClass: "tom-select-custom", searchInDropdown: !0, plugins: ["change_listener", "hs_smart_position"], hideSelected: !1, render: { option: function (t, e) { return t.optionTemplate || `<div>${t.text}</div>>` }, item: function (t, e) { return t.optionTemplate || `<div>${t.text}</div>>` } } }, collection: [], init(t, e, i) { const o = this; let n; n = t instanceof HTMLElement ? [t] : t instanceof Object ? t : document.querySelectorAll(t); for (let t = 0; t < n.length; t += 1)o.addToCollection(n[t], e, i || n[t].id); if (!o.collection.length) return !1; o._init() }, addToCollection(t, e, i) { const o = this; this.collection.push({ $el: t, id: i || null, options: Object.assign({}, o.defaults, t.hasAttribute(o.dataAttributeName) ? JSON.parse(t.getAttribute(o.dataAttributeName)) : {}, e) }) }, getItems() { const t = this; let e = []; for (let i = 0; i < t.collection.length; i += 1)e.push(t.collection[i].$initializedEl); return e }, getItem(t) { return "number" == typeof t ? this.collection[t].$initializedEl : this.collection.find((e => e.id === t)).$initializedEl }, _init() { const t = this; for (let e = 0; e < t.collection.length; e += 1) { let i, o; t.collection[e].hasOwnProperty("$initializedEl") || (i = t.collection[e].options, o = t.collection[e].$el, i.plugins.hasOwnProperty("hs_smart_position") && !o.closest(".modal") && (i.dropdownParent = "body"), o.hasAttribute("multiple") && (i.plugins = [...i.plugins, "remove_button"]), i.searchInDropdown && (i.plugins = [...i.plugins, "dropdown_input"]), TomSelect.define("hs_smart_position", (function (t) { this.hook("after", "setup", (function () { this.$menu = this.dropdown_content.parentElement, this.on("dropdown_open", (t => { const e = t.getBoundingClientRect(), o = this.wrapper.getBoundingClientRect(); e.bottom > window.innerHeight && (t.style.top = parseInt(t.style.top) - (this.control.clientHeight + t.clientHeight + 10) + "px"), t.style.opacity = 0, setTimeout((() => { const n = parseInt(t.style.width); n > o.width && i.dropdownLeft && (t.style.left = parseInt(t.style.left) - Math.abs(e.width - n) + "px"), t.style.opacity = 1 })) })), window.addEventListener("scroll", (() => function (t) { const e = t.$menu.getBoundingClientRect(); e.bottom > window.innerHeight ? t.$menu.style.top = `-${t.$menu.clientHeight + 10}px` : e.top < 0 && (t.$menu.style.top = null) }(this))) })) })), t.collection[e].$initializedEl = new TomSelect(o, i), i.hideSearch && t.hideSearch(t.collection[e].$initializedEl, i), i.disableSearch && t.disableSearch(t.collection[e].$initializedEl, i), i.width && t.width(t.collection[e].$initializedEl, i), i.singleMultiple && t.singleMultiple(t.collection[e].$initializedEl, i), i.hidePlaceholderOnSearch && t.hidePlaceholderOnSearch(t.collection[e].$initializedEl, i), i.create && t.openIfEmpty(t.collection[e].$initializedEl, i), i.hideSelectedFromField && t.hideSelectedFromField(t.collection[e].$initializedEl, i), i.dropdownWidth && t.dropdownWidth(t.collection[e].$initializedEl, i), t.renderPlaceholder(t.collection[e].$initializedEl, i), t.wrapContainer(t.collection[e].$initializedEl, i)) } }, hideSearch(t, e) { t.control_input.parentElement.removeChild(t.control_input) }, disableSearch(t, e) { t.control_input.readOnly = !0 }, singleMultiple(t, e) { t.control.classList.add("hs-select-single-multiple"); const i = (t.control_input.getAttribute("placeholder") || e.placeholder).replace(/(<([^>]+)>)/gi, ""), o = e => { e.target.closest("[data-selectable].selected") && (e.target.classList.remove("selected"), setTimeout((() => { t.removeItem(e.target.getAttribute("data-value"), !1), t.refreshItems() }))) }, n = e => { if (!t.wrapper.querySelector(".ts-selected-count")) { const e = document.createElement("span"); e.classList.add("ts-selected-count"), t.wrapper.querySelector(".ts-control").appendChild(e) } return t.wrapper.querySelector(".ts-selected-count").innerHTML = e }; t.items.length && (e.searchInDropdown ? n(t.items.length ? `${t.items.length} item(s) selected` : i) : t.control_input.setAttribute("placeholder", `${t.items.length} item(s) selected`)), t.on("dropdown_open", (t => { t.addEventListener("mouseup", o) })), t.on("dropdown_close", (t => { window.removeEventListener("mouseup", o) })), t.on("item_add", (() => { t.items.length && (e.searchInDropdown ? n(`${t.items.length} item(s) selected`) : t.control_input.setAttribute("placeholder", `${t.items.length} item(s) selected`)) })), t.on("item_remove", (() => { t.items.length ? e.searchInDropdown ? n(`${t.items.length} item(s) selected`) : t.control_input.setAttribute("placeholder", `${t.items.length} item(s) selected`) : e.searchInDropdown ? n(i) : t.control_input.setAttribute("placeholder", i) })) }, width(t, e) { t.wrapper.style.maxWidth = e.width }, hidePlaceholderOnSearch(t, e) { const i = (t.control_input.getAttribute("placeholder") || e.placeholder).replace(/(<([^>]+)>)/gi, ""); i && (t.on("dropdown_open", (() => { t.control_input.setAttribute("placeholder", "") })), t.on("dropdown_close", (() => { t.control_input.setAttribute("placeholder", i) }))) }, openIfEmpty(t, e) { t.control_input.addEventListener("focus", (() => { t.$menu.querySelector(".option") || (t.open(), setTimeout((() => { t.$menu.style.display = "block", t.$menu.querySelector(".ts-dropdown-content").append(t.render("no_results")) }), 10)) })) }, hideSelectedFromField(t, e) { t.on("item_select", onSelect), t.on("item_add", onSelect) }, dropdownWidth(t, e) { t.on("dropdown_open", (() => t.$menu.style.width = e.dropdownWidth)) }, width(t, e) { t.wrapper.style.width = e.width }, renderPlaceholder(t, e) { if (e.singleMultiple || t.items.length) return; const i = t.input.getAttribute("placeholder") || e.placeholder; if (e.searchInDropdown && !e.hideSelected) { let e = null; const o = function () { if (e = t.wrapper.querySelector(".ts-custom-placeholder"), t.items.length && e) return e.parentElement && e.parentElement.removeChild(e), e = null; t.items.length || e || n() }, n = function () { t.items.length || (t.wrapper.querySelector(".ts-control").innerHTML = `<span class="ts-custom-placeholder">${i}</span>`, e = t.wrapper.querySelector(".ts-custom-placeholder")) }; n(), t.on("change", o) } i && (t.control_input.offsetParent ? function (e) { t.control_input.setAttribute("placeholder", e.replace(/(<([^>]+)>)/gi, "")) }(i) : function (e) { const i = () => { t.control.innerHTML = `<div class="ts-custom-placeholder">${e}</div>` }; i(), t.on("change", (() => { t.items.length && (() => { const e = t.wrapper.querySelector(".items .ts-custom-placeholder"); e && e.parentElement && e.parentElement.removeChild(e) })(), t.items.length || i() })) }(i)) }, wrapContainer(t, e) { var i = document.createElement("div"); i.className += e.dropdownWrapperClass, t.$menu.parentNode.insertBefore(i, t.$menu), i.appendChild(t.$menu) } }, HSCore.components.HSTyped = { collection: [], dataAttributeName: "data-hs-typed-options", defaults: {}, init(t, e, i) { const o = this; let n; n = t instanceof HTMLElement ? [t] : t instanceof Object ? t : document.querySelectorAll(t); for (let t = 0; t < n.length; t += 1)o.addToCollection(n[t], e, i || n[t].id); if (!o.collection.length) return !1; o._init() }, addToCollection(t, e, i) { const o = this; this.collection.push({ $el: t, id: i || null, options: Object.assign({}, o.defaults, t.hasAttribute(o.dataAttributeName) ? JSON.parse(t.getAttribute(o.dataAttributeName)) : {}, e) }) }, _init: function () { const t = this; for (let e = 0; e < t.collection.length; e += 1) { let i, o; t.collection[e].hasOwnProperty("$initializedEl") || (i = t.collection[e].$el, o = t.collection[e].options, t.collection[e].$initializedEl = new Typed(i, o)) } } };